type RCMMetaTransactionExecutedEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  userAddress: Bytes! # address
  relayerAddress: Bytes! # address
  functionSignature: Bytes! # bytes
}

type RCMPredicateRegisteredEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  tokenType: Bytes! # bytes32
  predicateAddress: Bytes! # address
}

type RCMRoleAdminChangedEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
}

type RCMRoleGrantedEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
}

type RCMRoleRevokedEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
}

type RCMTokenMappedEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  rootToken: Bytes! # address
  childToken: Bytes! # address
  tokenType: Bytes! # bytes32
}
