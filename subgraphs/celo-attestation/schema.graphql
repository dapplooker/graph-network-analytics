type RequestedAttestation @entity {
  id: ID!
  pk: String!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  identifier: Bytes! # bytes32
  account: Bytes! # address
  attestationsRequested: BigInt! # uint256
  attestationRequestFeeToken: Bytes! # address
}

type CompletedAttestation @entity {
  id: ID!
  pk: String!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  identifier: Bytes! # bytes32
  account: Bytes! # address
  issuer: Bytes! # address
}

type UniqueCompletedAttestion @entity {
  id: ID!
}

type AttestationFee @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  token: Bytes! # address
  value: BigInt! # uint256
}

type IssuersWaitBlock @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  value: BigInt! # uint256
}

type IssuerSelected @entity {
  id: ID!
  pk: String!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  identifier: Bytes! # bytes32
  account: Bytes! # address
  issuer: Bytes! # address
  attestationRequestFeeToken: Bytes! # address
}

type AttestationDayData @entity {
  id: ID!
  attestationRequestedCount: BigDecimal!
  attestationCompletedCount: BigDecimal!
  attestationIssuerSelectedCount: BigDecimal!
  attestationRequestedGasConsumed: BigDecimal!
  attestationCompletedGasConsumed: BigDecimal!
  attestationIssuerSelectedGasConsumed: BigDecimal!
  lastUpdatedTimestamp: BigInt! # uint256
  dayTimestamp: Int! # uint256
}

type Withdrawal @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  account: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
}

type AttestationsTransferred @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  identifier: Bytes! # bytes32
  fromAccount: Bytes! # address
  toAccount: Bytes! # address
}

type TransferApproval @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  approver: Bytes! # address
  indentifier: Bytes! # bytes32
  from: Bytes! # address
  to: Bytes! # address
  approved: Boolean! # bool
}

type EscrowRevocationEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  identifier: Bytes! # bytes32
  by: Bytes! # address
  token: Bytes! # address
  value: BigInt! # uint256
  paymentId: Bytes! # address
}

type EscrowTransferEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  from: Bytes! # address
  identifier: Bytes! # bytes32
  token: Bytes! # address
  value: BigInt! # uint256
  paymentId: Bytes! # address
  minAttestations: BigInt! # uint256
}

type EscrowWithdrawalEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  identifier: Bytes! # bytes32
  to: Bytes! # address
  token: Bytes! # address
  value: BigInt! # uint256
  paymentId: Bytes! # address
}

type AccountWalletAddressSetEvent @entity {
  id: ID!
  txHash: Bytes
  fromAddress: Bytes # address
  toAddress: Bytes # address
  valueTransferred: BigInt
  gasUsed: BigInt
  gasPrice: BigInt
  blockTimestamp: BigInt! # uint256
  account: Bytes! # address
  walletAddress: Bytes! # address
}

